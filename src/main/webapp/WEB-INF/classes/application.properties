# none This is the default for MySQL, no change to the database structure.
# update Hibernate changes the database according to the given Entity structures.
# create Creates the database every time, but do not drop it when close.
# create-drop Creates the database then drops it when the SessionFactory closes.
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.time_zone = UTC

#spring.datasource.url=jdbc:mysql://localhost:3306/notice_board?serverTimezone=UTC&characterEncoding=UTF-8
#spring.datasource.username=notice_board
#spring.datasource.password=notice_board^!98&
#file.upload.path.tempFile=/Users/kangnamgyu/JOB/BlueBrick/tmpFileUpload
#file.upload.path.uploadFile=/Users/kangnamgyu/JOB/BlueBrick/uploadFile



#spring.datasource.url=jdbc:mysql://203.228.148.142:3306/BBDB?characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
spring.datasource.url=jdbc:mysql://211.253.25.182:11000/BBDB?characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
spring.datasource.username=bbsa
spring.datasource.password=tpwhd246
#spring.datasource.password=tpwhd246~
file.upload.path.tempFile=/home/mainnet/Tomcat/temp
file.upload.path.uploadFile=/filesvr/upload
#file.upload.path.tempFile=/Users/hun/workspace-spring-tool-suite-4-4.10.0.RELEASE/newbluebrick_filesvr/temp
#file.upload.path.uploadFile=/Users/hun/workspace-spring-tool-suite-4-4.10.0.RELEASE/newbluebrick_filesvr/filesvr/upload


admin.id=admin
admin.password=!adminbb

spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

spring.jpa.show-sql=true
spring.jpa.generate-ddl=true

#spring.session.store-type=jdbc
#spring.session.jdbc.initialize-schema=always
server.servlet.session.timeout=30m

# data.sql inital data insert
spring.datasource.initialization-mode=always


spring.mvc.view.prefix: /WEB-INF/jsp
spring.mvc.view.suffix: .jsp
# Path pattern used for static resources. WILL MAP classpath:/static/js/jquery.min.js TO /[static]/js/jquery.min.js 
spring.mvc.static-path-pattern=/public/**


# To do not return key of empty value For json response.
spring.jackson.default-property-inclusion=NON_NULL

# Enable support of multi-part uploads.
spring.servlet.multipart.enabled=true
# Threshold after which files will be written to disk. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.servlet.multipart.file-size-threshold=0
# Intermediate location of uploaded files. 
#spring.http.multipart.location= 
 # Max file size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.servlet.multipart.max-file-size=6MB
# Max request size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.servlet.multipart.max-request-size=60MB
# Whether to resolve the multipart request lazily at the time of file or parameter access. 
spring.servlet.multipart.resolve-lazily=false




